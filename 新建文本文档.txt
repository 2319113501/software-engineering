import xml.etree.ElementTree as ET
import pickle
import os
import shutil
from os import listdir, getcwd
from os.path import join

classes = [["l_sleeve","trousers"], ["l_sleeve","shorts"], ["s_sleeve","trousers"], ["s_sleeve","shorts"],["unsure","l_sleeve"] ,["l_sleeve"], ["unsure","s_sleeve"], ["s_sleeve"], ["unsure", "trousers"], ["trousers"], ["unsure", "shorts"], ["shorts"], ["unsure"], []]


def convert(size, box):
    dw = 1./(size[0])
    dh = 1./(size[1])
    x = (box[0] + box[1])/2.0 - 1
    y = (box[2] + box[3])/2.0 - 1
    w = box[1] - box[0]
    h = box[3] - box[2]
    x = x*dw
    w = w*dw
    y = y*dh
    h = h*dh
    if w>=1:
        w=0.99
    if h>=1:
        h=0.99
    return (x,y,w,h)

def convert_annotation(rootpath,ori_dir,xmlname):
    xmlpath ="/home/data/50"
    xmlfile = os.path.join(xmlpath,xmlname)
    with open(xmlfile, "r", encoding='UTF-8') as in_file:
      txtname = xmlname[:-4]+'.txt'
      print(txtname)
      txtpath = rootpath + 'labels/train_2020/'#生成的.txt文件会被保存在worktxt目录下
      if not os.path.exists(txtpath):
        os.makedirs(txtpath)
      txtfile = os.path.join(txtpath,txtname)
      with open(txtfile, "w+" ,encoding='UTF-8') as out_file:
        tree=ET.parse(in_file)
        root = tree.getroot()
        size = root.find('size')
        w = int(size.find('width').text)
        h = int(size.find('height').text)
        out_file.truncate()
        for obj in root.iter('object'):
            temp = []
            for classnum in obj.iter('class'):
                cls = classnum.text # 寻找class字段
                temp.append(cls) # 将元素加入到temp临时元素列表中
            
            if temp == ["trousers","l_sleeve"]:
                temp = ["l_sleeve","trousers"]
                
            if temp == ["shorts","l_sleeve"]:
                temp = ["l_sleeve","shorts"]
                
            if temp == ["trousers","s_sleeve"]:
                temp = ["s_sleeve","trousers"]
                
            if temp == ['shorts', 's_sleeve']:
                temp = ["s_sleeve","shorts"]
                
            if temp == ["l_sleeve","unsure"]:
                temp = ["unsure","l_sleeve"]
                
            if temp == ["s_sleeve","unsure"]:
                temp = ["unsure","s_sleeve"]
                
            if temp == ["trousers","unsure"]:
                temp = ["unsure", "trousers"]
                
            if temp == ["shorts","unsure"]:
                temp = ["unsure", "shorts"]
            
            if len(temp)==3:
                continue
            if temp == ["trousers","shorts"] or temp == ["shorts","trousers"]:
                continue
            if temp == ["l_sleeve","s_sleeve"] or temp == ["s_sleeve","l_sleeve"]:
                continue
            cls_id = classes.index(temp)
            
            xmlbox = obj.find('bndbox') # 寻找框的位置信息
            xmin = float(xmlbox.find('xmin').text)
            xmax = float(xmlbox.find('xmax').text)
            ymin = float(xmlbox.find('ymin').text)
            ymax = float(xmlbox.find('ymax').text)
            if xmin < 1 or w < xmax or ymin < 1 or h < ymax:
                continue
            b = (xmin, xmax, ymin, ymax)
            bb = convert((w,h), b)
            out_file.write(str(cls_id) + " " + " ".join([str(a) for a in bb]) + '\n')

def copy_image(path,new_dir,jpgname):
    if not os.path.exists(new_dir):
        os.makedirs(new_dir)
    shutil.copyfile(path,new_dir+list[i])
            
if __name__ == "__main__":
    rootpath = "/home/data/"
    ori_dir = os.listdir("/home/data/")
    for d in ori_dir:
        if d.isdigit():
            ori_dir = d
            break
    path1="/project/train/preprocessed_dataset/"
            
    xmlpath=rootpath+ori_dir
    list=os.listdir(xmlpath)
    for i in range(0,len(list)) :
        path = os.path.join(xmlpath,list[i])
        if ('.xml' in path)or('.XML' in path):
            convert_annotation(path1,ori_dir,list[i])
           
